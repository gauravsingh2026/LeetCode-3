https://leetcode.com/problems/word-search/

important parts are checking base cases.
checking when to stop program.
checkin wheter the point is already visited or not.


chec for test case
[["A","B","C","E"],["S","F","C","S"],["A","D","E","E"]]
"ABCB"

class Solution {
public:
    bool check(vector<vector<char>>& board, string word,int i,int j,int len)
    {
        if(len==word.size())
            return 1;
        
        if(i<0 || i>=board.size() || j<0 || j>=board[0].size())
            return 0;
        if(board[i][j]!=word[len]) 
        {
          return 0;
        }
             len=len+1;
      char ch=board[i][j];  
        board[i][j]='*';    
        
        bool ans=check(board,word,i+1,j,len)||check(board,word,i,j+1,len)||check(board,word,i-1,j,len) || check(board,word,i,j-1,len);
        
        board[i][j]=ch;
        return ans;
        
}
    bool exist(vector<vector<char>>& board, string word) {
        for(int i=0;i<board.size();i++)
            for(int j=0;j<board[0].size();j++)
              if( check(board,word,i,j,0) ) 
                  return 1;
        return 0;
    }
};

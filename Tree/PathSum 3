I was stuck on how to include and exlclude the node->val.
Same that we do in dp.
this was solved by following code if u go through it.





/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pathsumFrom(TreeNode* node,int sum)
    {
        if(node==NULL)
            return 0;
        int lh=pathsumFrom(node->left, sum - node->val);
        int rh=pathsumFrom(node->right, sum - node->val);
        if(node->val==sum)
            return 1+lh+rh;
        return lh+rh;
            
    }
    int pathSum(TreeNode* root, int targetSum) {
       if(root==NULL)
           return 0;
     
        return pathSum(root->left,targetSum)+pathSum(root->right,targetSum)+pathsumFrom(root,targetSum);
    }
};

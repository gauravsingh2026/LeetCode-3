dummy node
1->2->3->3->4->5
when curr at 2,
1->2 3->3->4->5
   |____^
curr->next=curr->next->next

Again we have to repeat this step as crr->next=3
so 
  1->2 3->3->4->5
     |_______^
     
     
     

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode *dummy=new ListNode(0);
        dummy->next=head;
        ListNode* curr=dummy;
        while(curr->next && curr->next->next )
        {
            if(curr->next->val==curr->next->next->val)
            {
                int d=curr->next->val;
                while(curr->next && curr->next->val==d)
                    curr->next=curr->next->next;
            }
            else
                 curr=curr->next;
        }
        return dummy->next;
    }
};

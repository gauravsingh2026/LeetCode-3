  Basically point a odd at 1 even a at pos2
  Odd ka next will be odd ka next ka next ... (given oddd->next exist)
  similary for even.
  so now in eaxh step we have connected node of odd and even to next odd and even
  In the end both odd ka next and even ka next will be null
   1,2,3,4,null
   1->3->null 2->4->null
   
   Also now we need to move odd forward in order to move odd forward check condition if odd ka next exist ,....as we dont need odd to be zero
   Because we have to connect even ka starting with end of odd.
   
   in the case odd will be pointig at 2 and even at null,now temp comes in picture and we set odd ka next to even ka start.
   
   
  
  
  
  In each step move odd to odd ka next only if odd ka next exist other wise we can put odd ka
  
  
  ListNode* oddEvenList(ListNode* head) {
        if(head==NULL || head->next==NULL)
            
            return head;
      ListNode *odd=head,*even=head->next,*temp=even;
       while(odd->next && even->next)
        {
          if(odd->next)
          odd->next=odd->next->next;
           if(even->next)
               even->next=even->next->next;
           if(odd->next) odd=odd->next;
           even=even->next;
        }
        odd->next=temp;
        return head;
    }
};
